# Generated by Django 3.2 on 2021-06-04 12:50

from django.db import migrations, models
import django.db.models.deletion


def move_values(apps, schema_editor):
    Component = apps.get_model('catalogue', 'component')
    for c in Component.objects.all():
        c.name = c.basedata.name
        c.trl = c.basedata.trl
        c.description = c.basedata.description

        c.product = c.applicationprofile.product

        c.scenarios = c.use.scenarios

        c.manufacturer = c.source.manufacturer
        c.contact = c.source.contact
        c.additional_info = c.source.additional_info

        c.realtime_processing = c.technicalspecification.realtime_processing
        c.data_formats = c.technicalspecification.data_formats

        c.protocols = c.requirements.protocols
        c.it_environment = c.requirements.it_environment
        c.hardware_requirements = c.requirements.hardware_requirements
        c.devices = c.requirements.devices
        c.save()


class Migration(migrations.Migration):

    dependencies = [
        ('catalogue', '0003_rename_technical_specification_kpi_use'),
    ]

    operations = [
        # relation swap
        migrations.RenameField(
            model_name='aimethod',
            old_name='technical_specification',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='aimethod',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='branchapplicable',
            old_name='application_profile',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='branchapplicable',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='branchproven',
            old_name='application_profile',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='branchproven',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='corporatedivision',
            old_name='application_profile',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='corporatedivision',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='dataanalysisprocess',
            old_name='technical_specification',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='dataanalysisprocess',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='hierarchylevel',
            old_name='application_profile',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='hierarchylevel',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='kpi',
            old_name='use',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='kpi',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='licenses',
            old_name='technical_specification',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='licenses',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='process',
            old_name='application_profile',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='process',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        migrations.RenameField(
            model_name='task',
            old_name='base_data',
            new_name='component',
        ),
        migrations.AlterField(
            model_name='task',
            name='component',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.component'),
        ),
        # END relation swap
        migrations.AddField(
            model_name='component',
            name='additional_info',
            field=models.TextField(blank=True, help_text='Zusatzinformation zur Komponente', verbose_name='Zusatzinformationen'),
        ),
        migrations.AddField(
            model_name='component',
            name='contact',
            field=models.TextField(blank=True, help_text='Möglichkeit zum Hersteller Kontakt aufzunehmen', verbose_name='Kontakt'),
        ),
        migrations.AddField(
            model_name='component',
            name='data_formats',
            field=models.CharField(blank=True, help_text='Datenformate, die von der KI-Komponente verarbeitet werden können und Datenformat der Ergebnisse', max_length=1000, verbose_name='Datenformate'),
        ),
        migrations.AddField(
            model_name='component',
            name='description',
            field=models.TextField(default=1, help_text='Kurze Beschreibung der Komponente', verbose_name='Kurzbeschreibung'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='devices',
            field=models.CharField(default=1, help_text='Maschinen und IoT Devices, mit denen die Komponente kompatibel ist', max_length=1000, verbose_name='Maschinen/Steuerungen'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='hardware_requirements',
            field=models.CharField(default=1, help_text='Spezielle Hardware, welche für den Betrieb der Komponente notwendig ist (z.B. Kamera, Roboter)', max_length=1000, verbose_name='Spezielle Hardware'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='it_environment',
            field=models.CharField(default=1, help_text='Anforderungen an die IT-Umgebung (inkl. IT Hardware) und an weitere Software/Bibliotheken, die für den Betrieb der Komponente notwendig sind', max_length=1000, verbose_name='IT Umgebung/Software'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='manufacturer',
            field=models.CharField(default=1, help_text='Entwickler und/oder Hersteller der Komponente', max_length=1000, verbose_name='Hersteller'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='name',
            field=models.CharField(default="1", help_text='Bezeichnung der Komponente', max_length=200, verbose_name='Name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='product',
            field=models.TextField(default=1, help_text='Hergestelltes Produkt', verbose_name='Produkt'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='protocols',
            field=models.CharField(default=1, help_text='Schnittstellen und/oder Protokolle, die von der Kompomente unterstützt werden', max_length=1000, verbose_name='Protokolle/Schnittstellen'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='realtime_processing',
            field=models.IntegerField(choices=[(None, 'Bitte Wert auswählen'), (0, 'Keine Echtzeit'), (1, 'Weiche Echtzeit'), (2, 'Harte Echtzeit'), (3, 'Feste Echtzeit')], default=1, help_text='Klassifizierung der Komponente in Bezug auf ihre Echtzeitfähigkeit', verbose_name='Echtzeitverarbeitung'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='scenarios',
            field=models.TextField(default=1, help_text='Beschreibung von Szenarien, in denen die Komponente bereits erfolgreich eingesetzt wurde', verbose_name='Szenarien / Use cases'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='component',
            name='trl',
            field=models.IntegerField(choices=[(None, 'Bitte Wert auswählen'), (1, 'TRL 1 - Grundprinzipien beobachtet'), (2, 'TRL 2 - Technologiekonzept formuliert'), (3, 'TRL 3 - Experimenteller Nachweis des Konzepts'), (4, 'TRL 4 - Technologie im Labor überprüft'), (5, 'TRL 5 - Technologie in relevanter Umgebung überprüft'), (6, 'TRL 6 - Technologie in relevanter Umgebung getestet'), (7, 'TRL 7 - Test eines System-Prototyps im realen Einsatz'), (8, 'TRL 8 - System ist komplett und qualifiziert'), (9, 'TRL 9 - System funktioniert in operationeller Umgebung')], default=1, help_text='Status der Komponente in Bezug auf Ihre Einsetzbarkeit durch die Angabe eines Technischen Reifegrades (Technology Readiness Level).', verbose_name='TRL'),
            preserve_default=False,
        ),
        migrations.RunPython(move_values),
        migrations.AlterField(
            model_name='component',
            name='name',
            field=models.CharField(help_text='Bezeichnung der Komponente', max_length=200, unique=True, verbose_name='Name'),
        ),
        migrations.RemoveField(
            model_name='basedata',
            name='component',
        ),
        migrations.RemoveField(
            model_name='requirements',
            name='component',
        ),
        migrations.RemoveField(
            model_name='source',
            name='component',
        ),
        migrations.RemoveField(
            model_name='technicalspecification',
            name='component',
        ),
        migrations.RemoveField(
            model_name='use',
            name='component',
        ),
        migrations.DeleteModel(
            name='ApplicationProfile',
        ),
        migrations.DeleteModel(
            name='BaseData',
        ),
        migrations.DeleteModel(
            name='Requirements',
        ),
        migrations.DeleteModel(
            name='Source',
        ),
        migrations.DeleteModel(
            name='TechnicalSpecification',
        ),
        migrations.DeleteModel(
            name='Use',
        ),
    ]
